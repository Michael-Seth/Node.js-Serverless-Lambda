service: playground-app

frameworkVersion: '4'
useDotenv: false

custom:
  id: ${aws:accountId, '381492124589'}
  domain: playground-app.com
  stage: ${opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs20.x  
  region: us-east-1 
  memorySize: 512
  timeout: 30
  apiGateway:
    binaryMediaTypes:
      - "multipart/form-data"
  tags:
    service: playground-service
    company: playground-app
    project: playground-app
  tracing:
    apiGateway: false
    lambda: false
  logs:
    restApi:
      level: ERROR
  iam:
    role: arn:aws:iam::${self:custom.id}:role/serverless-lambda

plugins:
  - serverless-offline

package:
  exclude:
    - "node_modules/aws-sdk/**"
    - "node_modules/typescript/**"
    - "src/**"

# Functions define Lambda handlers and events like HTTP requests
functions:
  api:
    handler: src/aws/lambda-handler.handler
    timeout: 300
    events:
      - http:
          path: /api-v1/
          method: ANY
          cors: true
      - http:
          path: /api-v1/{proxy+}
          method: ANY
          cors: true
      - schedule:
          rate: cron(0/4 6-23 ? * * *)

# Resources: You can also configure additional AWS resources (e.g., DynamoDB, S3)
resources:
  Outputs:
    ApiGatewayEndpoint:
      Description: "API Gateway endpoint URL"
      Value: !Sub "https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
